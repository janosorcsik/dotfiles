" leader key
let mapleader = ' '
nnoremap <Space> <Nop>

" relative line numbers
set number
set relativenumber

set scrolloff=8
set notimeout

nnoremap <Esc> :nohlsearch<CR>

" case-insensitive search
set ignorecase
" enable case-sensitive search when uppercased letter is present
set smartcase
" search while typing
set incsearch

set cursorline

" smart line joining
set ideajoin

" move line up/down
nnoremap <a-j> :m .+1<cr>==
nnoremap <a-k> :m .-2<cr>==

" center the content
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz
nnoremap n nzzzv
nnoremap N Nzzzv

nnoremap <S-h> :bp<CR>
nnoremap <S-l> :bn<CR>

map <leader>f <Action>(GotoFile)
map <leader>b <Action>(Switcher)

set highlightedyank
set NERDTree
set surround
set which-key

nmap ds <Plug>Dsurround
nmap cs <Plug>Csurround
nmap ys <Plug>Ysurround

nmap gc <Action>(CommentByLineComment)
vmap gc <Action>(CommentByLineComment)

" Code actions
nmap <leader>c <Action>(ShowIntentionActions)

" Rename symbol
nmap <leader>r <Action>(RenameElement)

" Go to definition
nmap gd <Action>(GotoDeclaration)

" Go to implementation
nmap gi <Action>(GotoImplementation)

" Go to references
nmap gr <Action>(FindUsages)

" Go to type definition
nmap gt <Action>(GotoTypeDeclaration)

set functiontextobj
